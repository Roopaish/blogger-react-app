{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","BlogDetails.js","CreateBlog.js","NotFound.js","App.js","index.js"],"names":["Navbar","exact","to","className","activeStyle","color","activeClassName","BlogList","blogs","style","map","blog","id","title","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","BlogDetails","useParams","history","useHistory","body","onClick","method","push","CreateBlog","setTitle","setBody","setAuthor","onSubmit","e","preventDefault","headers","JSON","stringify","type","placeholder","required","value","onChange","target","rows","NotFound","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ca2b554.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <NavLink exact to=\"/blogger-react-app/\">\r\n        <h1 className=\"title\">Blogger</h1>\r\n      </NavLink>\r\n      <div className=\"nav-links\">\r\n        <NavLink\r\n          exact\r\n          to=\"/blogger-react-app/\"\r\n          activeStyle={{ color: \"whitesmoke\" }}\r\n          activeClassName=\"active\"\r\n          className=\"nav-link\"\r\n        >\r\n          <span>Home</span>\r\n        </NavLink>\r\n        <NavLink\r\n          exact\r\n          to=\"/blogger-react-app/newblog\"\r\n          activeClassName=\"active\"\r\n          activeStyle={{ color: \"whitesmoke\" }}\r\n          className=\"nav-link\"\r\n        >\r\n          <span>New Blog</span>\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n//blogs rae received as props here\r\nconst BlogList = ({ blogs }) => {\r\n  return (\r\n    <div className=\"blog-list\">\r\n      <h1 style={{ color: \"hsl(340, 57%, 64%)\" }}>All Blogs!</h1>\r\n      {blogs.map((blog) => (\r\n        <div className=\"blog-preview\" key={blog.id}>\r\n          {/* Id will be passed to BlogDetails using Params  */}\r\n          <Link to={`/blogger-react-app/blogs/${blog.id}`}>\r\n            <h1>{blog.title}</h1>\r\n            <p>Written By: {blog.author}</p>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  //called everytime document renders\r\n  useEffect(() => {\r\n    //to abort Dom request when needed\r\n    //fetch aborted will be shown when there is sudden swicth of page without the content full load\r\n    const abortCont = new AbortController();\r\n\r\n    //Fetching the data\r\n    fetch(url, { signal: abortCont.signal })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw Error(\"Could not fetch the data\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"Fetch aborted\");\r\n        } else {\r\n          //auto cattch other errors i.e network or other\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      });\r\n\r\n    //abort the fetch when switched\r\n    return () => abortCont.abort();\r\n  }, [url]);\r\n\r\n  //Returning the data\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n  const { error, isPending, data: blogs } = useFetch(\r\n    \"https://blogger-rolify-api.herokuapp.com/blogs\"\r\n  );\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {error && <div>{error}</div>}\r\n      {isPending && <div>Loading...</div>}\r\n      {blogs && <BlogList blogs={blogs} />}\r\n      {/* blogs are beigng passed to bloglist using props */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useHistory, useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n  const { id } = useParams(); //from bloglist key = blog.id\r\n  const { data: blogs, isPending, error } = useFetch(\r\n    \"https://blogger-rolify-api.herokuapp.com/blogs/\" + id\r\n  );\r\n  const history = useHistory();\r\n\r\n  const handleDelete = () => {\r\n    fetch(\"https://blogger-rolify-api.herokuapp.com/blogs/\" + blogs.id, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      history.push(\"/blogger-react-app/\"); //push to home\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"blog-details\">\r\n      {isPending && <div>Loading...</div>}\r\n      {error && <div>{error}</div>}\r\n      {blogs && (\r\n        <article>\r\n          <h1>{blogs.title}</h1>\r\n          <p>Written By: {blogs.author}</p>\r\n          <div>{blogs.body}</div>\r\n          <button onClick={handleDelete}>Delete</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst CreateBlog = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const blog = { title, body, author };\r\n\r\n    fetch(\"https://blogger-rolify-api.herokuapp.com/blogs/\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog),\r\n    }).then(() => {\r\n      history.push(\"/blogger-react-app/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-blog\">\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Blog Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          required\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <label>Body:</label>\r\n        <textarea\r\n          rows=\"7\"\r\n          type=\"text\"\r\n          placeholder=\"Body\"\r\n          required\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        />\r\n        <label>Author:</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Author\"\r\n          required\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n        />\r\n        <button>Add Blog</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateBlog;\r\n","const NotFound = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h1>404</h1>\r\n      <p>Not found or Page doesn't exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport BlogDetails from \"./BlogDetails\";\nimport CreateBlog from \"./CreateBlog\";\nimport NotFound from \"./NotFound\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/blogger-react-app/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/blogger-react-app/newblog\">\n              <CreateBlog />\n            </Route>\n            <Route exact path=\"/blogger-react-app/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}